{"paragraphs":[{"text":"%sh\npip install kafka-python\necho $PWD\nmkdir dep\ncd ./dep && wget https://repo1.maven.org/maven2/org/apache/spark/spark-streaming-kafka-0-8-assembly_2.11/2.0.2/spark-streaming-kafka-0-8-assembly_2.11-2.0.2.jar\n","user":"anonymous","dateUpdated":"2020-07-05T16:08:22+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"results":{},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Collecting kafka-python\n  Downloading https://files.pythonhosted.org/packages/aa/34/12f219f7f9e68e79a54874d26fbe974db1ab4efac4e6dae665b421df48f9/kafka_python-2.0.1-py2.py3-none-any.whl (232kB)\nInstalling collected packages: kafka-python\nSuccessfully installed kafka-python-2.0.1\nYou are using pip version 8.1.2, however version 20.1.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n/zeppelin\n--2020-07-05 16:08:29--  https://repo1.maven.org/maven2/org/apache/spark/spark-streaming-kafka-0-8-assembly_2.11/2.0.2/spark-streaming-kafka-0-8-assembly_2.11-2.0.2.jar\nResolving repo1.maven.org (repo1.maven.org)... 151.101.132.209\nConnecting to repo1.maven.org (repo1.maven.org)|151.101.132.209|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 11292862 (11M) [application/java-archive]\nSaving to: ‘spark-streaming-kafka-0-8-assembly_2.11-2.0.2.jar’\n\n     0K .......... .......... .......... .......... ..........  0% 20.1M 1s\n    50K .......... .......... .......... .......... ..........  0%  889K 6s\n   100K .......... .......... .......... .......... ..........  1% 99.1M 4s\n   150K .......... .......... .......... .......... ..........  1% 2.31M 4s\n   200K .......... .......... .......... .......... ..........  2%  809K 6s\n   250K .......... .......... .......... .......... ..........  2%  275M 5s\n   300K .......... .......... .......... .......... ..........  3% 1.00M 6s\n   350K .......... .......... .......... .......... ..........  3%  270M 5s\n   400K .......... .......... .......... .......... ..........  4% 2.29M 5s\n   450K .......... .......... .......... .......... ..........  4% 2.13M 5s\n   500K .......... .......... .......... .......... ..........  4% 1.20M 5s\n   550K .......... .......... .......... .......... ..........  5% 2.73M 5s\n   600K .......... .......... .......... .......... ..........  5% 2.16M 5s\n   650K .......... .......... .......... .......... ..........  6% 1.72M 5s\n   700K .......... .......... .......... .......... ..........  6% 2.29M 5s\n   750K .......... .......... .......... .......... ..........  7% 1.03M 5s\n   800K .......... .......... .......... .......... ..........  7% 2.16M 5s\n   850K .......... .......... .......... .......... ..........  8%  437K 6s\n   900K .......... .......... .......... .......... ..........  8% 1.05M 6s\n   950K .......... .......... .......... .......... ..........  9% 2.27M 6s\n  1000K .......... .......... .......... .......... ..........  9% 1.36M 6s\n  1050K .......... .......... .......... .......... ..........  9% 2.04M 6s\n  1100K .......... .......... .......... .......... .......... 10% 1.94M 6s\n  1150K .......... .......... .......... .......... .......... 10% 3.36M 6s\n  1200K .......... .......... .......... .......... .......... 11% 2.52M 6s\n  1250K .......... .......... .......... .......... .......... 11% 2.40M 6s\n  1300K .......... .......... .......... .......... .......... 12%  908K 6s\n  1350K .......... .......... .......... .......... .......... 12% 2.08M 6s\n  1400K .......... .......... .......... .......... .......... 13%  569K 6s\n  1450K .......... .......... .......... .......... .......... 13%  781K 6s\n  1500K .......... .......... .......... .......... .......... 14% 8.49M 6s\n  1550K .......... .......... .......... .......... .......... 14% 44.1M 6s\n  1600K .......... .......... .......... .......... .......... 14% 1.96M 6s\n  1650K .......... .......... .......... .......... .......... 15% 1.60M 6s\n  1700K .......... .......... .......... .......... .......... 15% 2.26M 6s\n  1750K .......... .......... .......... .......... .......... 16% 2.42M 6s\n  1800K .......... .......... .......... .......... .......... 16% 1.88M 6s\n  1850K .......... .......... .......... .......... .......... 17% 1.40M 6s\n  1900K .......... .......... .......... .......... .......... 17% 1.78M 5s\n  1950K .......... .......... .......... .......... .......... 18% 1.85M 5s\n  2000K .......... .......... .......... .......... .......... 18% 1.87M 5s\n  2050K .......... .......... .......... .......... .......... 19% 1.48M 5s\n  2100K .......... .......... .......... .......... .......... 19% 1.54M 5s\n  2150K .......... .......... .......... .......... .......... 19% 2.05M 5s\n  2200K .......... .......... .......... .......... .......... 20% 2.55M 5s\n  2250K .......... .......... .......... .......... .......... 20% 2.04M 5s\n  2300K .......... .......... .......... .......... .......... 21% 1.53M 5s\n  2350K .......... .......... .......... .......... .......... 21% 1.56M 5s\n  2400K .......... .......... .......... .......... .......... 22% 4.38M 5s\n  2450K .......... .......... .......... .......... .......... 22% 2.25M 5s\n  2500K .......... .......... .......... .......... .......... 23%  982K 5s\n  2550K .......... .......... .......... .......... .......... 23% 1.92M 5s\n  2600K .......... .......... .......... .......... .......... 24% 2.37M 5s\n  2650K .......... .......... .......... .......... .......... 24% 1.50M 5s\n  2700K .......... .......... .......... .......... .......... 24% 1.81M 5s\n  2750K .......... .......... .......... .......... .......... 25% 1.74M 5s\n  2800K .......... .......... .......... .......... .......... 25% 2.27M 5s\n  2850K .......... .......... .......... .......... .......... 26% 1.19M 5s\n  2900K .......... .......... .......... .......... .......... 26% 3.51M 5s\n  2950K .......... .......... .......... .......... .......... 27% 1.06M 5s\n  3000K .......... .......... .......... .......... .......... 27% 47.1M 5s\n  3050K .......... .......... .......... .......... .......... 28%  742K 5s\n  3100K .......... .......... .......... .......... .......... 28% 21.8M 5s\n  3150K .......... .......... .......... .......... .......... 29% 8.16M 5s\n  3200K .......... .......... .......... .......... .......... 29% 1.65M 4s\n  3250K .......... .......... .......... .......... .......... 29% 2.61M 4s\n  3300K .......... .......... .......... .......... .......... 30% 1.60M 4s\n  3350K .......... .......... .......... .......... .......... 30% 2.48M 4s\n  3400K .......... .......... .......... .......... .......... 31% 2.14M 4s\n  3450K .......... .......... .......... .......... .......... 31% 1.75M 4s\n  3500K .......... .......... .......... .......... .......... 32% 1.24M 4s\n  3550K .......... .......... .......... .......... .......... 32% 4.09M 4s\n  3600K .......... .......... .......... .......... .......... 33% 3.93M 4s\n  3650K .......... .......... .......... .......... .......... 33% 4.48M 4s\n  3700K .......... .......... .......... .......... .......... 34% 1.09M 4s\n  3750K .......... .......... .......... .......... .......... 34% 1.29M 4s\n  3800K .......... .......... .......... .......... .......... 34% 6.74M 4s\n  3850K .......... .......... .......... .......... .......... 35% 6.07M 4s\n  3900K .......... .......... .......... .......... .......... 35% 1.17M 4s\n  3950K .......... .......... .......... .......... .......... 36% 10.8M 4s\n  4000K .......... .......... .......... .......... .......... 36% 1.23M 4s\n  4050K .......... .......... .......... .......... .......... 37% 6.46M 4s\n  4100K .......... .......... .......... .......... .......... 37% 12.1M 4s\n  4150K .......... .......... .......... .......... .......... 38% 13.0M 4s\n  4200K .......... .......... .......... .......... .......... 38% 1023K 4s\n  4250K .......... .......... .......... .......... .......... 38% 8.37M 4s\n  4300K .......... .......... .......... .......... .......... 39% 23.8M 4s\n  4350K .......... .......... .......... .......... .......... 39% 7.12M 4s\n  4400K .......... .......... .......... .......... .......... 40% 2.95M 3s\n  4450K .......... .......... .......... .......... .......... 40% 3.25M 3s\n  4500K .......... .......... .......... .......... .......... 41% 38.6M 3s\n  4550K .......... .......... .......... .......... .......... 41% 1.79M 3s\n  4600K .......... .......... .......... .......... .......... 42% 2.87M 3s\n  4650K .......... .......... .......... .......... .......... 42% 2.05M 3s\n  4700K .......... .......... .......... .......... .......... 43% 3.98M 3s\n  4750K .......... .......... .......... .......... .......... 43% 6.83M 3s\n  4800K .......... .......... .......... .......... .......... 43% 2.91M 3s\n  4850K .......... .......... .......... .......... .......... 44% 31.6M 3s\n  4900K .......... .......... .......... .......... .......... 44% 6.21M 3s\n  4950K .......... .......... .......... .......... .......... 45% 3.32M 3s\n  5000K .......... .......... .......... .......... .......... 45% 8.42M 3s\n  5050K .......... .......... .......... .......... .......... 46% 4.01M 3s\n  5100K .......... .......... .......... .......... .......... 46% 5.46M 3s\n  5150K .......... .......... .......... .......... .......... 47% 2.98M 3s\n  5200K .......... .......... .......... .......... .......... 47% 40.3M 3s\n  5250K .......... .......... .......... .......... .......... 48% 6.02M 3s\n  5300K .......... .......... .......... .......... .......... 48% 23.8M 3s\n  5350K .......... .......... .......... .......... .......... 48% 2.70M 3s\n  5400K .......... .......... .......... .......... .......... 49% 3.13M 3s\n  5450K .......... .......... .......... .......... .......... 49% 45.9M 3s\n  5500K .......... .......... .......... .......... .......... 50% 19.5M 3s\n  5550K .......... .......... .......... .......... .......... 50% 3.72M 3s\n  5600K .......... .......... .......... .......... .......... 51% 21.6M 2s\n  5650K .......... .......... .......... .......... .......... 51% 4.29M 2s\n  5700K .......... .......... .......... .......... .......... 52% 3.09M 2s\n  5750K .......... .......... .......... .......... .......... 52% 49.3M 2s\n  5800K .......... .......... .......... .......... .......... 53% 3.47M 2s\n  5850K .......... .......... .......... .......... .......... 53% 8.46M 2s\n  5900K .......... .......... .......... .......... .......... 53% 51.1M 2s\n  5950K .......... .......... .......... .......... .......... 54% 2.62M 2s\n  6000K .......... .......... .......... .......... .......... 54%  625K 2s\n  6050K .......... .......... .......... .......... .......... 55% 48.2M 2s\n  6100K .......... .......... .......... .......... .......... 55% 9.73M 2s\n  6150K .......... .......... .......... .......... .......... 56% 50.9M 2s\n  6200K .......... .......... .......... .......... .......... 56% 10.8M 2s\n  6250K .......... .......... .......... .......... .......... 57% 1.79M 2s\n  6300K .......... .......... .......... .......... .......... 57% 1.99M 2s\n  6350K .......... .......... .......... .......... .......... 58% 16.1M 2s\n  6400K .......... .......... .......... .......... .......... 58% 27.4M 2s\n  6450K .......... .......... .......... .......... .......... 58% 14.8M 2s\n  6500K .......... .......... .......... .......... .......... 59%  855K 2s\n  6550K .......... .......... .......... .......... .......... 59% 2.00M 2s\n  6600K .......... .......... .......... .......... .......... 60% 51.0M 2s\n  6650K .......... .......... .......... .......... .......... 60% 3.45M 2s\n  6700K .......... .......... .......... .......... .......... 61% 26.5M 2s\n  6750K .......... .......... .......... .......... .......... 61% 5.72M 2s\n  6800K .......... .......... .......... .......... .......... 62% 1.23M 2s\n  6850K .......... .......... .......... .......... .......... 62% 17.2M 2s\n  6900K .......... .......... .......... .......... .......... 63% 11.4M 2s\n  6950K .......... .......... .......... .......... .......... 63% 7.90M 2s\n  7000K .......... .......... .......... .......... .......... 63% 1.64M 2s\n  7050K .......... .......... .......... .......... .......... 64% 7.20M 2s\n  7100K .......... .......... .......... .......... .......... 64% 26.0M 2s\n  7150K .......... .......... .......... .......... .......... 65% 1.54M 2s\n  7200K .......... .......... .......... .......... .......... 65% 31.7M 2s\n  7250K .......... .......... .......... .......... .......... 66% 3.11M 2s\n  7300K .......... .......... .......... .......... .......... 66% 2.83M 2s\n  7350K .......... .......... .......... .......... .......... 67% 3.44M 2s\n  7400K .......... .......... .......... .......... .......... 67% 26.8M 1s\n  7450K .......... .......... .......... .......... .......... 68% 43.1M 1s\n  7500K .......... .......... .......... .......... .......... 68% 61.0M 1s\n  7550K .......... .......... .......... .......... .......... 68% 9.22M 1s\n  7600K .......... .......... .......... .......... .......... 69% 21.1M 1s\n  7650K .......... .......... .......... .......... .......... 69% 53.6M 1s\n  7700K .......... .......... .......... .......... .......... 70% 1.53M 1s\n  7750K .......... .......... .......... .......... .......... 70% 2.52M 1s\n  7800K .......... .......... .......... .......... .......... 71% 12.4M 1s\n  7850K .......... .......... .......... .......... .......... 71% 28.8M 1s\n  7900K .......... .......... .......... .......... .......... 72% 8.47M 1s\n  7950K .......... .......... .......... .......... .......... 72% 15.9M 1s\n  8000K .......... .......... .......... .......... .......... 72% 1.27M 1s\n  8050K .......... .......... .......... .......... .......... 73% 1.68M 1s\n  8100K .......... .......... .......... .......... .......... 73% 41.6M 1s\n  8150K .......... .......... .......... .......... .......... 74% 2.16M 1s\n  8200K .......... .......... .......... .......... .......... 74% 51.4M 1s\n  8250K .......... .......... .......... .......... .......... 75% 54.3M 1s\n  8300K .......... .......... .......... .......... .......... 75% 40.3M 1s\n  8350K .......... .......... .......... .......... .......... 76% 6.46M 1s\n  8400K .......... .......... .......... .......... .......... 76% 3.06M 1s\n  8450K .......... .......... .......... .......... .......... 77% 42.7M 1s\n  8500K .......... .......... .......... .......... .......... 77% 2.55M 1s\n  8550K .......... .......... .......... .......... .......... 77% 55.6M 1s\n  8600K .......... .......... .......... .......... .......... 78% 53.1M 1s\n  8650K .......... .......... .......... .......... .......... 78% 64.3M 1s\n  8700K .......... .......... .......... .......... .......... 79% 2.68M 1s\n  8750K .......... .......... .......... .......... .......... 79% 33.0M 1s\n  8800K .......... .......... .......... .......... .......... 80% 50.6M 1s\n  8850K .......... .......... .......... .......... .......... 80% 64.1M 1s\n  8900K .......... .......... .......... .......... .......... 81% 51.1M 1s\n  8950K .......... .......... .......... .......... .......... 81% 1.84M 1s\n  9000K .......... .......... .......... .......... .......... 82% 47.1M 1s\n  9050K .......... .......... .......... .......... .......... 82% 66.6M 1s\n  9100K .......... .......... .......... .......... .......... 82% 2.01M 1s\n  9150K .......... .......... .......... .......... .......... 83% 48.2M 1s\n  9200K .......... .......... .......... .......... .......... 83% 65.5M 1s\n  9250K .......... .......... .......... .......... .......... 84% 66.8M 1s\n  9300K .......... .......... .......... .......... .......... 84% 13.2M 1s\n  9350K .......... .......... .......... .......... .......... 85% 56.4M 1s\n  9400K .......... .......... .......... .......... .......... 85% 3.31M 1s\n  9450K .......... .......... .......... .......... .......... 86% 58.1M 1s\n  9500K .......... .......... .......... .......... .......... 86% 2.38M 1s\n  9550K .......... .......... .......... .......... .......... 87% 25.1M 1s\n  9600K .......... .......... .......... .......... .......... 87% 4.04M 0s\n  9650K .......... .......... .......... .......... .......... 87% 49.2M 0s\n  9700K .......... .......... .......... .......... .......... 88% 58.8M 0s\n  9750K .......... .......... .......... .......... .......... 88% 70.1M 0s\n  9800K .......... .......... .......... .......... .......... 89% 41.5M 0s\n  9850K .......... .......... .......... .......... .......... 89% 1.77M 0s\n  9900K .......... .......... .......... .......... .......... 90% 44.2M 0s\n  9950K .......... .......... .......... .......... .......... 90% 64.5M 0s\n 10000K .......... .......... .......... .......... .......... 91% 56.7M 0s\n 10050K .......... .......... .......... .......... .......... 91% 54.3M 0s\n 10100K .......... .......... .......... .......... .......... 92% 37.4M 0s\n 10150K .......... .......... .......... .......... .......... 92% 3.50M 0s\n 10200K .......... .......... .......... .......... .......... 92% 51.8M 0s\n 10250K .......... .......... .......... .......... .......... 93% 5.32M 0s\n 10300K .......... .......... .......... .......... .......... 93% 3.60M 0s\n 10350K .......... .......... .......... .......... .......... 94% 39.3M 0s\n 10400K .......... .......... .......... .......... .......... 94% 4.08M 0s\n 10450K .......... .......... .......... .......... .......... 95% 48.9M 0s\n 10500K .......... .......... .......... .......... .......... 95% 56.3M 0s\n 10550K .......... .......... .......... .......... .......... 96% 67.6M 0s\n 10600K .......... .......... .......... .......... .......... 96% 6.32M 0s\n 10650K .......... .......... .......... .......... .......... 97% 59.8M 0s\n 10700K .......... .......... .......... .......... .......... 97% 5.61M 0s\n 10750K .......... .......... .......... .......... .......... 97% 16.3M 0s\n 10800K .......... .......... .......... .......... .......... 98% 2.23M 0s\n 10850K .......... .......... .......... .......... .......... 98% 20.0M 0s\n 10900K .......... .......... .......... .......... .......... 99% 25.6M 0s\n 10950K .......... .......... .......... .......... .......... 99% 3.58M 0s\n 11000K .......... .......... ........                        100% 2.58M=3.6s\n\n2020-07-05 16:08:33 (2.98 MB/s) - ‘spark-streaming-kafka-0-8-assembly_2.11-2.0.2.jar’ saved [11292862/11292862]\n\n"}]},"apps":[],"jobName":"paragraph_1593541419040_-578626173","id":"20190429-115420_1698791579","dateCreated":"2020-06-30T18:23:39+0000","dateStarted":"2020-07-05T16:08:22+0000","dateFinished":"2020-07-05T16:08:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:172"},{"text":"%consumer.dep\nz.reset()\nz.load(\"/zeppelin/dep/spark-streaming-kafka-0-8-assembly_2.11-2.0.2.jar\")","user":"anonymous","dateUpdated":"2020-07-05T16:08:52+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@119f48dc\n"}]},"apps":[],"jobName":"paragraph_1593541419040_-208542783","id":"20200630-074700_496348867","dateCreated":"2020-06-30T18:23:39+0000","dateStarted":"2020-07-05T16:08:52+0000","dateFinished":"2020-07-05T16:09:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:173"},{"text":"%sh\nls /datadrive","user":"anonymous","dateUpdated":"2020-07-05T16:07:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh","title":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"census_1000.csv\noccupancy_data.csv\n"}]},"apps":[],"jobName":"paragraph_1593541591463_664344803","id":"20200630-182631_240634991","dateCreated":"2020-06-30T18:26:31+0000","dateStarted":"2020-06-30T18:29:04+0000","dateFinished":"2020-06-30T18:29:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:174"},{"title":"","text":"%producer.pyspark\n\nfrom pyspark.sql.functions import unix_timestamp, from_unixtime\n\ndf = (spark.read.format(\"com.databricks.spark.csv\")\n        .option(\"header\", \"true\")\n        .option(\"inferSchema\",\"true\")\n        .load(\"/datadrive/occupancy_data.csv\"))\n\n#df_aux = df.select('date',\n#               from_unixtime(unix_timestamp('date', '%Y-%m-%d %H:%M:%S')).alias('date_good')\n#)\n#df_aux.show()\ndrop_list = ['date']\ndf_aux = df.select([column for column in df.columns if column not in drop_list])\ndf_list = df_aux.collect()\ndf_aux.show()\n","user":"anonymous","dateUpdated":"2020-07-05T16:15:17+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+-----------+----------------+-----+----------------+-------------------+---------+\n|RowId|Temperature|        Humidity|Light|             CO2|      HumidityRatio|Occupancy|\n+-----+-----------+----------------+-----+----------------+-------------------+---------+\n|    1|      23.18|          27.272|426.0|          721.25|0.00479298817650529|        1|\n|    2|      23.15|         27.2675|429.5|           714.0|0.00478344094931065|        1|\n|    3|      23.15|          27.245|426.0|           713.5|0.00477946352442199|        1|\n|    4|      23.15|            27.2|426.0|          708.25|0.00477150882608175|        1|\n|    5|       23.1|            27.2|426.0|           704.5|0.00475699293331518|        1|\n|    6|       23.1|            27.2|419.0|           701.0|0.00475699293331518|        1|\n|    7|       23.1|            27.2|419.0|701.666666666667|0.00475699293331518|        1|\n|    8|       23.1|            27.2|419.0|           699.0|0.00475699293331518|        1|\n|    9|       23.1|            27.2|419.0|689.333333333333|0.00475699293331518|        1|\n|   10|     23.075|          27.175|419.0|           688.0|0.00474535071966655|        1|\n|   11|     23.075|           27.15|419.0|          690.25|0.00474095189694268|        1|\n|   12|       23.1|            27.1|419.0|           691.0|0.00473937073052061|        1|\n|   13|       23.1|27.1666666666667|419.0|           683.5|0.00475111875560951|        1|\n|   14|      23.05|           27.15|419.0|           687.5| 0.0047337317970825|        1|\n|   15|       23.0|          27.125|419.0|           686.0|0.00471494214590473|        1|\n|   16|       23.0|          27.125|418.5|           680.5|0.00471494214590473|        1|\n|   17|       23.0|            27.2|  0.0|           681.5|0.00472807794966877|        0|\n|   18|     22.945|           27.29|  0.0|           685.0|0.00472795137178073|        0|\n|   19|     22.945|           27.39|  0.0|           685.0| 0.0047454083970941|        0|\n|   20|      22.89|           27.39|  0.0|           689.0|0.00472950615591001|        0|\n+-----+-----------+----------------+-----+----------------+-------------------+---------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1593541419041_42446930","id":"20190424-153802_2004623441","dateCreated":"2020-06-30T18:23:39+0000","dateStarted":"2020-07-05T16:15:17+0000","dateFinished":"2020-07-05T16:15:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:175"},{"text":"%producer.pyspark\nimport time\nimport json\nimport random\nimport logging\nimport kafka\n\nfrom kafka import KafkaProducer\nfrom kafka.errors import KafkaError\n\nKAFKA_BROKER = \"172.25.0.12:9092\"\nKAFKA_TOPIC = \"default_topic\"\n\nproducer = KafkaProducer(bootstrap_servers=[KAFKA_BROKER])\nindex = 0\n\nwhile True:\n    \n    row_dict = df_list[index].asDict()\n    \n    future = producer.send(\n        topic=KAFKA_TOPIC, \n        key=str(row_dict[\"RowId\"]).encode(),\n        value=str(json.dumps(row_dict)).encode())\n    \n    try:\n        record_metadata = future.get(timeout=10)\n    except KafkaError:\n        # Decide what to do if produce request failed...\n        logging.exception(\"Error\")\n        pass\n    \n    producer.flush()\n    \n    index += 1\n    time.sleep(random.uniform(0.6,1.3))","user":"anonymous","dateUpdated":"2020-07-05T17:58:08+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1593541419041_-1798450150","id":"20190424-165258_808657351","dateCreated":"2020-06-30T18:23:39+0000","dateStarted":"2020-07-05T17:58:08+0000","dateFinished":"2020-07-05T17:54:11+0000","status":"ABORT","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:176"},{"text":"%consumer.pyspark\n\nimport sys\nimport json\nfrom pyspark.streaming.kafka import KafkaUtils\nfrom pyspark.streaming import StreamingContext\n\n\n\nos.environ['PYSPARK_SUBMIT_ARGS'] = '--jars spark-streaming-kafka-assembly_2.10-1.6.0.jar pyspark-shell'\n\ntry:\n    # Reset streaming context if exists\n    ssc.stop(stopSparkContext=False, stopGraceFully=False)\nexcept:\n    pass\n\nssc = StreamingContext(sc, batchDuration=2)\n\nREDDIT_TOPIC = \"default_topic\"\nKAFKA_BROKERS = \"172.25.0.12:9092,172.25.0.13:9092\"\n\n\nstream = KafkaUtils.createDirectStream(\n                            ssc, \n                            [REDDIT_TOPIC], \n                            {\"metadata.broker.list\": KAFKA_BROKERS})\n\n\ndef parseSample(line):\n  s = line.replace('\"','').split(\",\")\n  print(s)\n  try:\n      return [{\"RowId\": int(s[0]),\n               \"Temperature\": float(s[2]),\n               \"Humidity\": float(s[3]), \n               \"Light\": float(s[4]),\n               \"CO2\": float(s[5]), \n               \"HumidityRatio\": float(s[6]),\n               \"Occupancy\": bool(s[7][0])}]\n  except Exception as err:\n      print(\"Wrong sample format (%s): \" % line)\n      print(err)\n      return []\n\n#stream = stream.map(lambda x: json.loads(x[1]))\n#stream = stream.map(lambda x: x.items())\n#|RowId|Temperature|        Humidity|Light|             CO2|      HumidityRatio|Occupancy|\n#stream = stream.map(lambda x: (x[\"RowId\"], x[\"Temperature\"]))\n\n#stream = stream.map(lambda o: str(o[1]))\nstream = stream.map(lambda x: x[1])\n#samples = stream.flatMap(parseSample)\n#samples = samples.flatMap(lambda x: x.items())\n\nstream.pprint()\n#samples.pprint()\n\n\n# -----------------------------------\n#        TESTING QUERIES\n# -----------------------------------\ncounts = stream.map(lambda line: line.split(\"\\t\")) \\\n               .map(lambda line: (line[4], 1)) \\\n               .reduceByKey(lambda a, b: a+b)\n\ncounts.pprint()\n\n# Example 2: accumulated count of registrations by type\ndef update_func(new_val, last_sum):\n    return sum(new_val) + (last_sum or 0)\nssc.checkpoint(\"checkpoint\")  # checkpoint directory, failure recovery\n\ncountsTotal = stream.map(lambda line: line.split(\"\\t\")) \\\n              .map(lambda line: (line[4], 1)) \\\n              .updateStateByKey(update_func)\n\ncountsTotal.pprint()\n\n\nssc.start()\nssc.awaitTermination()","user":"anonymous","dateUpdated":"2020-07-05T17:59:43+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"-------------------------------------------\nTime: 2020-07-05 17:59:50\n-------------------------------------------\n{\"CO2\": 578.0, \"Temperature\": 22.1, \"Light\": 0.0, \"Occupancy\": 0, \"Humidity\": 27.15, \"HumidityRatio\": 0.00446645358141236, \"RowId\": 95}\n{\"CO2\": 576.5, \"Temperature\": 22.1, \"Light\": 0.0, \"Occupancy\": 0, \"Humidity\": 27.2, \"HumidityRatio\": 0.00447473826972372, \"RowId\": 96}\n{\"CO2\": 580.0, \"Temperature\": 22.1, \"Light\": 0.0, \"Occupancy\": 0, \"Humidity\": 27.2, \"HumidityRatio\": 0.00447473826972372, \"RowId\": 97}\n{\"CO2\": 572.5, \"Temperature\": 22.1, \"Light\": 0.0, \"Occupancy\": 0, \"Humidity\": 27.2, \"HumidityRatio\": 0.00447473826972372, \"RowId\": 98}\n\n\u001b[0;31m\u001b[0m\n\u001b[0;31mPy4JJavaError\u001b[0mTraceback (most recent call last)\n\u001b[0;32m<ipython-input-56-5979ed37710a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    119\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    120\u001b[0m \u001b[0mssc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 121\u001b[0;31m \u001b[0mssc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mawaitTermination\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/streaming/context.py\u001b[0m in \u001b[0;36mawaitTermination\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    204\u001b[0m         \"\"\"\n\u001b[1;32m    205\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mtimeout\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 206\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jssc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mawaitTermination\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    207\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    208\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jssc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mawaitTerminationOrTimeout\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m1000\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/py4j-0.10.4-src.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1131\u001b[0m         \u001b[0manswer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1132\u001b[0m         return_value = get_return_value(\n\u001b[0;32m-> 1133\u001b[0;31m             answer, self.gateway_client, self.target_id, self.name)\n\u001b[0m\u001b[1;32m   1134\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1135\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mtemp_arg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtemp_args\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/sql/utils.py\u001b[0m in \u001b[0;36mdeco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m     61\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdeco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 63\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     64\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mpy4j\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprotocol\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPy4JJavaError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m             \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjava_exception\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtoString\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/zeppelin/interpreter/spark/pyspark/py4j-0.10.4-src.zip/py4j/protocol.py\u001b[0m in \u001b[0;36mget_return_value\u001b[0;34m(answer, gateway_client, target_id, name)\u001b[0m\n\u001b[1;32m    317\u001b[0m                 raise Py4JJavaError(\n\u001b[1;32m    318\u001b[0m                     \u001b[0;34m\"An error occurred while calling {0}{1}{2}.\\n\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 319\u001b[0;31m                     format(target_id, \".\", name), value)\n\u001b[0m\u001b[1;32m    320\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    321\u001b[0m                 raise Py4JError(\n\n\u001b[0;31mPy4JJavaError\u001b[0m: An error occurred while calling o409272.awaitTermination.\n: org.apache.spark.SparkException: An exception was raised by Python:\nTraceback (most recent call last):\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/streaming/util.py\", line 65, in call\n    r = self.func(t, *rdds)\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/streaming/dstream.py\", line 171, in takeAndPrint\n    taken = rdd.take(num + 1)\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 1343, in take\n    res = self.context.runJob(self, takeUpToNumLeft, p)\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/context.py\", line 992, in runJob\n    port = self._jvm.PythonRDD.runJob(self._jsc.sc(), mappedRDD._jrdd, partitions)\n  File \"/zeppelin/interpreter/spark/pyspark/py4j-0.10.4-src.zip/py4j/java_gateway.py\", line 1133, in __call__\n    answer, self.gateway_client, self.target_id, self.name)\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/sql/utils.py\", line 63, in deco\n    return f(*a, **kw)\n  File \"/zeppelin/interpreter/spark/pyspark/py4j-0.10.4-src.zip/py4j/protocol.py\", line 319, in get_return_value\n    format(target_id, \".\", name), value)\nPy4JJavaError: An error occurred while calling z:org.apache.spark.api.python.PythonRDD.runJob.\n: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 8388.0 failed 1 times, most recent failure: Lost task 0.0 in stage 8388.0 (TID 7360, localhost, executor driver): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/worker.py\", line 177, in main\n    process()\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/worker.py\", line 172, in process\n    serializer.dump_stream(func(split_index, iterator), outfile)\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 2423, in pipeline_func\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 2423, in pipeline_func\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 346, in func\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 1842, in combineLocally\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/shuffle.py\", line 236, in mergeValues\n    for k, v in iterator:\n  File \"<ipython-input-56-5979ed37710a>\", line 61, in <lambda>\nIndexError: list index out of range\n\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)\n\tat org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)\n\tat org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:287)\n\tat org.apache.spark.api.python.PairwiseRDD.compute(PythonRDD.scala:404)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:287)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:108)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:338)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\nDriver stacktrace:\n\tat org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1517)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1505)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1504)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1504)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:814)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:814)\n\tat scala.Option.foreach(Option.scala:257)\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:814)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1732)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1687)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1676)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:630)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2029)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2050)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:2069)\n\tat org.apache.spark.api.python.PythonRDD$.runJob(PythonRDD.scala:455)\n\tat org.apache.spark.api.python.PythonRDD.runJob(PythonRDD.scala)\n\tat sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:280)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:214)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/worker.py\", line 177, in main\n    process()\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/worker.py\", line 172, in process\n    serializer.dump_stream(func(split_index, iterator), outfile)\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 2423, in pipeline_func\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 2423, in pipeline_func\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 346, in func\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/rdd.py\", line 1842, in combineLocally\n  File \"/zeppelin/interpreter/spark/pyspark/pyspark.zip/pyspark/shuffle.py\", line 236, in mergeValues\n    for k, v in iterator:\n  File \"<ipython-input-56-5979ed37710a>\", line 61, in <lambda>\nIndexError: list index out of range\n\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:193)\n\tat org.apache.spark.api.python.PythonRunner$$anon$1.<init>(PythonRDD.scala:234)\n\tat org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:152)\n\tat org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:63)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:287)\n\tat org.apache.spark.api.python.PairwiseRDD.compute(PythonRDD.scala:404)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:323)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:287)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:96)\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:53)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:108)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:338)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\t... 1 more\n\n\n\tat org.apache.spark.streaming.api.python.TransformFunction.callPythonTransformFunction(PythonDStream.scala:95)\n\tat org.apache.spark.streaming.api.python.TransformFunction.apply(PythonDStream.scala:78)\n\tat org.apache.spark.streaming.api.python.PythonDStream$$anonfun$callForeachRDD$1.apply(PythonDStream.scala:179)\n\tat org.apache.spark.streaming.api.python.PythonDStream$$anonfun$callForeachRDD$1.apply(PythonDStream.scala:179)\n\tat org.apache.spark.streaming.dstream.ForEachDStream$$anonfun$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ForEachDStream.scala:51)\n\tat org.apache.spark.streaming.dstream.ForEachDStream$$anonfun$1$$anonfun$apply$mcV$sp$1.apply(ForEachDStream.scala:51)\n\tat org.apache.spark.streaming.dstream.ForEachDStream$$anonfun$1$$anonfun$apply$mcV$sp$1.apply(ForEachDStream.scala:51)\n\tat org.apache.spark.streaming.dstream.DStream.createRDDWithLocalProperties(DStream.scala:416)\n\tat org.apache.spark.streaming.dstream.ForEachDStream$$anonfun$1.apply$mcV$sp(ForEachDStream.scala:50)\n\tat org.apache.spark.streaming.dstream.ForEachDStream$$anonfun$1.apply(ForEachDStream.scala:50)\n\tat org.apache.spark.streaming.dstream.ForEachDStream$$anonfun$1.apply(ForEachDStream.scala:50)\n\tat scala.util.Try$.apply(Try.scala:192)\n\tat org.apache.spark.streaming.scheduler.Job.run(Job.scala:39)\n\tat org.apache.spark.streaming.scheduler.JobScheduler$JobHandler$$anonfun$run$1.apply$mcV$sp(JobScheduler.scala:257)\n\tat org.apache.spark.streaming.scheduler.JobScheduler$JobHandler$$anonfun$run$1.apply(JobScheduler.scala:257)\n\tat org.apache.spark.streaming.scheduler.JobScheduler$JobHandler$$anonfun$run$1.apply(JobScheduler.scala:257)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\n\tat org.apache.spark.streaming.scheduler.JobScheduler$JobHandler.run(JobScheduler.scala:256)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"}]},"apps":[],"jobName":"paragraph_1593541419041_261119620","id":"20190423-122009_873241770","dateCreated":"2020-06-30T18:23:39+0000","dateStarted":"2020-07-05T17:59:43+0000","dateFinished":"2020-07-05T17:59:55+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:177"},{"text":"%consumer.pyspark\n","user":"anonymous","dateUpdated":"2020-07-05T16:07:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"tableHide":false,"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1593541419041_645381348","id":"20190429-143043_1027088896","dateCreated":"2020-06-30T18:23:39+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:178"}],"name":"sistemasDistribuidos3","id":"2FBAZHD76","noteParams":{},"noteForms":{},"angularObjects":{"producer:shared_process":[],"sh:shared_process":[],"consumer:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}